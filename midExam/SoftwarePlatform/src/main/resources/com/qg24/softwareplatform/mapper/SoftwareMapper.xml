<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qg24.softwareplatform.mapper.SoftwareMapper">
    <resultMap id="softwareTagResultMap" type="com.qg24.softwareplatform.po.vo.SimpleSoftwareVO">
        <result property="tagsString" column="tags"/>
    </resultMap>

    <select id="pagedQuerySoftwareBySoftNameAndTags"
            resultType="com.qg24.softwareplatform.po.vo.SimpleSoftwareVO" resultMap="softwareTagResultMap">
        select s.*, svd.version from software as s
                 left join
            (select software_id, max(version) as version from software_version_download where version_type = 0 group by software_id )
                 as svd on s.software_id = svd.software_id
        <where>
            s.status = 1
            <if test="softwareName != ''">and software_name like concat('%',#{softwareName},'%')</if>
        <if test="tags != null and tags.size > 0">
            <foreach collection="tags" item="tag">
                and tags like concat('%', #{tag}, '%')
            </foreach>
        </if>
        </where>
        limit #{offset}, #{pageSize}
    </select>

    <select id="getTotal" resultType="java.lang.Integer">
        select count(*) from software as s
        left join
        (select software_id, max(version) as version from software_version_download where version_type = 0 group by software_id )
        as svd on s.software_id = svd.software_id
        <where>
            status = 1
            <if test="softwareName != ''">and software_name like concat('%',#{softwareName},'%')</if>
            <if test="tags != null and tags.size > 0">
                <foreach collection="tags" item="tag">
                    and tags like concat('%', #{tag}, '%')
                </foreach>
            </if>
        </where>
    </select>


<!--    <select id="getTotal" resultType="java.lang.Integer">-->
<!--        select count(*) from software-->
<!--        <where>-->
<!--            <if test="softwareName != ''">and software_name like concat('%', #{softwareName}, '%')</if>-->
<!--            <if test="tags != null and tags.size > 0">-->
<!--                <foreach collection="tags" item="tag">-->
<!--                    and tags like concat('%', #{tag}, '%')-->
<!--                </foreach>-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->

    <select id="querySoftwareVersionDownloadUserNoAuth"
            resultType="com.qg24.softwareplatform.po.vo.ShowRequiredAuthSoftwareVO">
        SELECT DISTINCT
            svd.software_id,
            svd.version_type,
            s.software_name,
            svd.price,s.software_image,s.description,s.create_time
        FROM
            software_version_download AS svd
                LEFT JOIN
            user_software_auth AS usa
            ON
                svd.software_id = usa.software_id
                    AND svd.version_type = usa.version_type

                LEFT JOIN
            software AS s
            ON
                s.software_id = svd.software_id
        WHERE
            usa.user_id = #{userId}
            AND usa.expired_time > now()
        and
            (svd.software_id, svd.version_type) != (usa.software_id, usa.version_type)
           OR (usa.software_id IS NULL AND usa.version_type IS NULL)  and s.status = 1
        LIMIT #{offset},24;
    </select>



<!--    查询用户可以更新的软件-->
    <select id="selectSoftwareUserCanUpdate"
            resultType="com.qg24.softwareplatform.po.vo.CheckLastestSoftwareVO">
        select
            svd.software_id,
            svd.version,
            svd.version_type,
            s.software_name,
            s.software_image
        from
            software_version_download as svd
                inner join
            user_software_download as usd
            on
                svd.software_id = usd.software_id
                    and svd.version_type = usd.version_type
                inner join
            software as s
            on
                svd.software_id = s.software_id
        where
            s.status = 1
          and usd.user_id = #{userId}
          and svd.version = (
            select
                max(svd_latest.version)
            from
                software_version_download as svd_latest
            where
                svd_latest.software_id = svd.software_id
              and svd_latest.version_type = svd.version_type
        )
          and usd.version != svd.version
    </select>


</mapper>